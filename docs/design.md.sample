# 要件・設計書

## 1. 要件定義

### 1.1 基本情報
- ソフトウェア名称: [プロジェクト名]
- リポジトリ名: [リポジトリ名]

### 1.2 プロジェクト概要

[プロジェクトの目的、背景、概要を記述してください。どのような問題を解決するのか、どのようなユーザーが使用するのかなどを含めてください。]

### 1.3 機能要件

#### 1.3.1 基本機能
- [主要機能1]
  - [サブ機能1-1]
  - [サブ機能1-2]
- [主要機能2]
  - [サブ機能2-1]
  - [サブ機能2-2]

#### 1.3.2 [追加機能カテゴリ]
- [追加機能1]
- [追加機能2]

### 1.4 非機能要件

#### 1.4.1 性能要件
- [性能に関する要件を記述]
- [レスポンス時間、スループット、同時接続数など]

#### 1.4.2 セキュリティ要件
- [セキュリティに関する要件を記述]
- [認証、認可、データ保護など]

#### 1.4.3 運用・保守要件
- [運用・保守に関する要件を記述]
- [監視、バックアップ、ログ記録など]

### 1.5 制約条件
- [技術的制約]
- [ビジネス的制約]
- [法的制約]

### 1.6 開発環境
- 言語：Python [バージョン]
- フレームワーク：[使用するフレームワーク]
- 外部API：[使用する外部API]
- 開発ツール：VSCode
- パッケージ管理：uv

### 1.7 成果物
- ソースコード
- 設計書
- テストコード
- README（セットアップ手順含む）
- [その他の成果物]

## 2. システム設計

### 2.1 システム概要設計

#### 2.1.1 システムアーキテクチャ
```
[システムの全体構成図をテキストまたは図で表現]
```

#### 2.1.2 主要コンポーネント
1. [コンポーネント1]
   - [役割・機能]
   - [サブコンポーネント]
2. [コンポーネント2]
   - [役割・機能]
   - [サブコンポーネント]
3. [コンポーネント3]
   - [役割・機能]
   - [サブコンポーネント]

#### 2.1.3 [設定・パラメータ]
- [設定項目1]: [デフォルト値]
- [設定項目2]: [デフォルト値]
- [設定項目3]:
  - [サブ設定1]: [値]
  - [サブ設定2]: [値]

### 2.2 詳細設計

#### 2.2.1 クラス設計

##### 2.2.1.1 [クラス名1]
```python
class [クラス名1]:
    """[クラスの説明]"""

    def __init__(self, [パラメータ]):
        """初期化メソッド"""
        [初期化処理]

    def [メソッド1](self, [パラメータ]) -> [戻り値の型]:
        """[メソッドの説明]"""
        [処理内容の概要]

    def [メソッド2](self, [パラメータ]) -> [戻り値の型]:
        """[メソッドの説明]"""
        [処理内容の概要]
```

##### 2.2.1.2 [クラス名2]
```python
class [クラス名2]:
    """[クラスの説明]"""

    def __init__(self, [パラメータ]):
        """初期化メソッド"""
        [初期化処理]

    def [メソッド1](self, [パラメータ]) -> [戻り値の型]:
        """[メソッドの説明]"""
        [処理内容の概要]

    async def [非同期メソッド](self, [パラメータ]) -> [戻り値の型]:
        """[非同期メソッドの説明]"""
        [処理内容の概要]
```

#### 2.2.2 データフロー
1. [ステップ1の説明]
2. [ステップ2の説明]
3. [ステップ3の説明]
4. [ステップ4の説明]

#### 2.2.3 エラーハンドリング
- [エラーケース1]
- [エラーケース2]
- [エラーケース3]

### 2.3 インターフェース設計

#### 2.3.1 [UI/API名]
- [要素1]
  - [詳細説明]
- [要素2]
  - [詳細説明]
- [要素3]
  - [詳細説明]

#### 2.3.2 [外部連携]
- [連携先1]
  - [連携方法]
  - [データフォーマット]
- [連携先2]
  - [連携方法]
  - [データフォーマット]

### 2.4 セキュリティ設計
- [セキュリティ対策1]
- [セキュリティ対策2]
- [セキュリティ対策3]

### 2.5 テスト設計
- ユニットテスト
  - [テスト対象1]
    - [テストケース1-1]
    - [テストケース1-2]
  - [テスト対象2]
    - [テストケース2-1]
    - [テストケース2-2]
- 統合テスト
  - [テストシナリオ1]
  - [テストシナリオ2]
- エラーケーステスト
  - [エラーケース1]
  - [エラーケース2]

### 2.6 開発環境・依存関係
- Python [バージョン]
- [依存ライブラリ1]
- [依存ライブラリ2]
- [依存ライブラリ3]
- pytest（テスト用）
- uv（パッケージ管理）

### 2.7 開発工程

#### 2.7.1 開発フェーズ
1. 要件分析・定義フェーズ（[期間]）
   - [タスク1-1]
   - [タスク1-2]
   - [タスク1-3]
2. 設計フェーズ（[期間]）
   - [タスク2-1]
   - [タスク2-2]
   - [タスク2-3]
3. 実装フェーズ（[期間]）
   - [タスク3-1]
   - [タスク3-2]
   - [タスク3-3]
4. テストフェーズ（[期間]）
   - [タスク4-1]
   - [タスク4-2]
   - [タスク4-3]
5. デプロイ・ドキュメント作成フェーズ（[期間]）
   - [タスク5-1]
   - [タスク5-2]
   - [タスク5-3]

#### 2.7.2 マイルストーンとタスク優先順位
- マイルストーン1: [マイルストーン名]（[達成予定日]）
  - [タスク1-1]
  - [タスク1-2]
  - [タスク1-3]
- マイルストーン2: [マイルストーン名]（[達成予定日]）
  - [タスク2-1]
  - [タスク2-2]
  - [タスク2-3]
- マイルストーン3: [マイルストーン名]（[達成予定日]）
  - [タスク3-1]
  - [タスク3-2]
  - [タスク3-3]

#### 2.7.3 リスク管理
- [リスク1]
  - 対応策: [対応策1]
- [リスク2]
  - 対応策: [対応策2]
- [リスク3]
  - 対応策: [対応策3]
